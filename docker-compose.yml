version: "3.8"

# shared logging settings
x-logging: &default-logging
  driver: "gelf"
  options:
    gelf-address: "udp://logstash:12201"

services:
  zookeeper:
    container_name: zookeeper
    restart: always
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_MAX_CLIENT_CONNECTIONS: 60
      ALLOW_ANONYMOUS_LOGIN: "yes"
    logging: *default-logging

  kafka:
    container_name: kafka
    restart: always
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      # For containers: use kafka:9092; for host access you can still hit localhost:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    logging: *default-logging

  ################################################
  # 2) Your EPICS + Kafka microservices         #
  ################################################
  epics-simulator:
    build: ./epics-simulator
    container_name: epics-simulator
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    logging: *default-logging

  epics-kafka-bridge:
    build: ./epics-kafka-bridge
    container_name: epics-kafka-bridge
    depends_on:
      - kafka
      - epics-simulator
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    logging: *default-logging

  epics-kafka-gateway:
    build: ./epics-kafka-gateway
    container_name: epics-kafka-gateway
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - epics-kafka-bridge
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    logging: *default-logging

  ################################################
  # 3) ELK Logging Stack                        #
  ################################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    logging: *default-logging

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.2
    container_name: logstash
    ports:
      - "12201:12201/udp"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch
    logging: *default-logging

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    logging: *default-logging
